{-
  Instantiates ADJ Logic with modes, a preorder on modes, a decidable preorder on modes, and a base type
  to construct propositions from.
-}

open import Mode using (Mode; StructRule; _,_; ∅)
open import Plans.Domain using (Predicate)
open import Relation.Nullary using (¬_; Dec; yes; no)

module Core.ADJ where
  -- Linear mode
  L : Mode
  L = ?

  -- Unrestricted mode
  U : Mode
  U = ?

  data _≥_ : Mode → Mode → Set where
    U≥L : 
      ----------------
      U ≥ L

  _≥?_ : Mode → Mode → Dec
  U ≥? L = yes (U ≥ L)
  L ≥? U = no 


  -- Make this instance of ADJ available
  open import ExplicitADJ Predicate L _≥_ _≥?_ public
  
